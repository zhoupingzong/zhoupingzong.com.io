<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <id>https://zhoupingzong.github.io</id>
    <title>Matrix</title>
    <updated>2020-03-05T14:27:21.341Z</updated>
    <generator>https://github.com/jpmonette/feed</generator>
    <link rel="alternate" href="https://zhoupingzong.github.io"/>
    <link rel="self" href="https://zhoupingzong.github.io/atom.xml"/>
    <subtitle>用知识构建，认知的矩阵</subtitle>
    <logo>https://zhoupingzong.github.io/images/avatar.png</logo>
    <icon>https://zhoupingzong.github.io/favicon.ico</icon>
    <rights>All rights reserved 2020, Matrix</rights>
    <entry>
        <title type="html"><![CDATA[markdown图床]]></title>
        <id>https://zhoupingzong.github.io/c65kQldrV/</id>
        <link href="https://zhoupingzong.github.io/c65kQldrV/">
        </link>
        <updated>2020-03-05T08:36:41.000Z</updated>
        <content type="html"><![CDATA[<p>MarkDown作为一种纯文本格式的标记语言，通过简单的标记语法，就使普通文本内容具有一定的格式。一次标记可以做到各平台通用，免除了富文本编辑器换平台就要重新排版的繁琐，越来越受欢迎，尤其是程序员群体。现在很多论坛和社区都开始支持使用MarkDown。但使用markdown也有一个重要的问题，那就是图片的存储，markdown文件要用到图片时必须是一个链接。各个平台都有自己的图片存储方法，在不使用图床的情况下，同一篇文章发布到不同的平台需要单独上传图片一次。这个真的无法接受，太麻烦。</p>
<p>解决办法就是使用图床来单独存储图片，需要用到图片的地方统一用图床上的图片链接就好了。这样同一篇文章，发布到不同的平台真正可以简单复制粘贴。</p>
<p>图床就是一个图片服务器，用来存储图片，以URL的形式来供其他平台获取图片。可以自己搭建，也可以使用别人搭建好后提供的服务。自己搭建肯定花钱，别人搭建给你提供服务，有的收费，有的一定范围内不收费，有的完全免费。</p>
<p>重要提示：数据是比金钱更重要的东西！这点务必先搞清楚。不要因为追求免费而用可能损失数据的服务，这样以后会发现，特别不值。即丢失了数据，又重新花钱，还浪费了时间。</p>
<p>一般选择图床要满足下面条件</p>
<p>可靠性。数据在当今社会是最宝贵的财富之一，因此在选择存储的服务时，可靠性无疑是首要的考虑因素。<br>
安全性。面对攻击、盗取和破坏时如何保障数据不受到损失，是另一个重要的考虑因素。<br>
是否简单易用。越简单易用越好。<br>
价格是否合理。在满足前两条的情况下，越便宜越好，最好免费。<br>
把网上搜集到的能作为图床的方法总结了一下（后附我的选择方案）</p>
<p>网上类似文章</p>
<p>盘点一下免费好用的图床-知乎<br>
分享8个高速稳定的图床网站-简书<br>
搜集到的作为图床的方法<br>
对象存储图床<br>
国外的有amazon s3 和google storage等<br>
国内的有七牛云、又拍云、腾讯云、阿里云、天翼云等<br>
第三方图床<br>
sm.ms、imgchr、聚合图床等<br>
云盘图床<br>
微云等<br>
社交网站图床<br>
新浪微博、qq空间等<br>
云笔记图床<br>
印象笔记、有道云笔记等<br>
代码托管网站图床<br>
github、码云等<br>
自建图床<br>
github开源图片服务Cheverto<br>
区块链存储图床<br>
IPFS等<br>
对象存储图床<br>
关于什么对象存储，请参考什么是对象存储？。很多大公司都提供对象存储的服务，可以作为图床来使用。国外的有amazon s3 和google storage等；国内的有七牛云、又拍云、腾讯云、阿里云、天翼云等。网上对于这些服务的对比可以看一看：8个免费对象存储空间云存储服务对比及选择建议</p>
<p>七牛云对象存储<br>
注册认证后有10G永久免费空间，每月10G国内和10G国外流量，速度相当快，无图片上传限制。七牛云是国内专业CDN服务商，插件支持比较多，有免费ssl证书。</p>
<p>七牛云官网-对象存储<br>
七牛云官方文档-对象存储-快速入门<br>
七牛云对象存储价格（标准存储，低至 0.099 元/GB/月起）<br>
特别注意：</p>
<p>七牛云30天后会回收测试域名，因此你必须要绑定自己的已经备案的域名。也就是说，要想用这个免费服务，首先你必须花钱购买域名和服务器，并且备案。只要一个域名为什么还要买服务器呢？因为这是管局的规定，域名备案是必须有服务器的，因为域名是一个独立的个体，属于网站的一部分，另外一部分网站的程序还需要放在服务器上，才算是完成网站的搭建。服务器和域名每年都需要续费，所以，虽然七牛云提供10G免费的空间，但这并不是一个免费的方案。如果你决定用，具体步骤可参考：1、在七牛云官网开通存储空间 2、购买域名并备案 3、七牛云外链绑定自己域名<br>
https流量收费。即如果图片链接想用https，那么必须升级，收费。<br>
又拍云对象存储<br>
注册认证后有10G永久免费空间，每月15G的HTTP和HTTPS流量，无图片上传限制，提供两款可以免费续期的SSL证书。</p>
<p>又拍云官网-对象存储<br>
又拍云联盟<br>
又拍云服务价格计算器（日存储容量 ≤ 日CDN流量时免费；<br>
存储容量 ＞ 日CDN流量时。超过部分日存储容量 0.0043 元/GB/日、0.129 元/GB/30天)<br>
特别注意：</p>
<p>需要绑定自己的已备案域名。同七牛云<br>
又拍云认证比较麻烦<br>
需要加入又拍云联盟计划才可享受以上待遇。（在网站底部添加又拍云logo及官网链接）<br>
腾讯云对象存储<br>
仅六个月的免费存储容量、免费请求和免费流量。</p>
<p>腾讯云官网-对象存储<br>
腾讯云官方文档：对象存储 COS<br>
腾讯云对象存储价格<br>
对象存储 COS 的计费项包括：存储容量费用、请求费用、数据取回费用、流量费用、和 管理功能费用。听着就头大</p>
<p>阿里云对象存储<br>
貌似没有免费额度。</p>
<p>阿里云官网-对象存储<br>
阿里云官方文档：对象存储 OSS<br>
阿里云对象存储价格<br>
对象存储 OSS 的计费项包括：存储费用、流量费用、请求费用、数据处理费用、对象标签费用、传输加速费用。跟腾讯云一样头大。</p>
<p>第三方图床<br>
第三方图床就是专门做图床的服务商，常见的有 sm.ms、imgchr、聚合图床等</p>
<p>sm.ms<br>
免费版存储容量5GB，每分钟限制上传20张，每小时限制上传100张，每天限制上传200张，每周限制上传500张，每月限制上传1000张，单张图片最大5M。不支持相册，找图片需要用搜索功能</p>
<p>sm.ms官网<br>
做了一个图床网站 sm.ms（sm.ms作者在V2EX上的帖子）<br>
imgchr<br>
免费版存储容量不限，每小时限制上传30张，每天限制上传次数为120次，单张图片最大10M。支持相册。仅限于非商用。</p>
<p>imgchr官网(中文名为路过图床)<br>
聚合图床<br>
将图片分发到多处备份，借助其本身的CDN加速功能，节省服务器流量，并且不用担心图片被删除，即便其中某几个图床上的图片被删除了，还有其他备份，保证万无一失，支持匿名和注册管理</p>
<p>免费版无API支持，跳转链接无法保证永久有效，若链接失效需要您重新上传获取新链接。最多存1000张，单张图片大小5M，不支持相册。</p>
<p>聚合图床官网<br>
云盘图床<br>
云盘一般都是文件系统存储，传图片获得外链即可。</p>
<p>微云：利用微云来做你的图床<br>
试了下百度网盘，分享图片可以生成永久链接，但必须要有提取码，肯定不合适做图床了。其他的没试，可以自行测试使用</p>
<p>社交网站图床<br>
社交网站也能发图片，相应的也就可以获得图片的外链。其中用的比较多的是微博图床和qq空间图床。</p>
<p>新浪微博：新浪图床怎么用、可以把新浪微博作为图床使用吗？<br>
qq空间：图床使用QQ空间会出现问题吗？<br>
特别注意：微博图床一直以来是大家喜欢的免费好用的图床。但2019年4月25日，微博开启了图片防盗链，Referrer不为空且不是新浪的站点，全部返回403错误，也就是说非新浪的站点无法引用新浪服务器里的图片了。目前可以通过修改referrer的属性来绕过这个限制，但不保证新浪不会采取进一步的措施，毕竟用的人多了，服务成本太大，公司也承受不住。这种方法已经不再安全。</p>
<p>云笔记图床<br>
云笔记同样也可以传图片，获取外链。比较出名的有印象笔记、有道云笔记。</p>
<p>印象笔记：使用印象笔记作为图床<br>
有道云笔记：使用有道云笔记作为图床<br>
代码托管网站图床<br>
常用的代码托管网站有github、gitlab、码云、coding等，这些网站也可以上传图片，网站生成的外链就可以用在markdown中。</p>
<p>主要有三种方法：新建一个仓库，专门放图片、使用pages服务、使用issues功能。</p>
<p>新建github仓库（GitHub repo）做图床<br>
github的issues功能做图床<br>
利用码云的 Gitee Pages 服务搭建个人图床<br>
自建图床<br>
自建图片服务器，顾名思义就是自己花钱购买服务器来搭建用来存储图片的服务。github有一个开源的图片服务Cheverto，可以用来搭建自己的图床。</p>
<p>Cheverto官网<br>
Cheverto的github地址<br>
使用Cheverto搭建一个自己的图床网站（此文章用到了docker，你需要懂docker）<br>
自建图床非程序员玩不转，租服务器贵不说，关键是麻烦，还要去维护。就算搞好了，万一以后不想维护了呢？再说了，租服务器也不少花钱，为什么不直接购买大厂的服务呢？当然你要有能力有实力有别的业务也用服务器，当我没说，这里只是想找个图床用而已。</p>
<p>区块链存储图床<br>
如果了解区块链，就会知道IPFS，它的远景很大，其中一个功能就是存储，我们也可以用它来作为图床。将是一种全新的体验，不过目前来看，尚早。持续关注中...</p>
<p>我的选择<br>
对象存储里七牛云和又拍云都需要备案域名，还是要花域名和服务器的钱，不划算。腾讯云和阿里云收费项繁多，看不懂，个人用也有点浪费。</p>
<p>第三方图床最担心的是不稳定，不知道哪一天服务商就关门大吉了。极简图床的就是个例子。经过时间考验有成熟商业模式的可以考虑。</p>
<p>云盘图床、社交网站图床、云笔记图床最担心的是做限制，不知道哪一天这些网站就对外链做限制了。微博图床就是个例子。</p>
<p>自建图床难度系数太高，费时费力。</p>
<p>区块链新型图床尚早，看未来吧。</p>
<p>代码托管网站本身比较稳定安全，可以用来存放个人少量图片。</p>
<p>基于以上分析，我的图床选择是</p>
<p>常用：利用码云仓库作为图床<br>
备用：sm.ms图床、imgchr图床(路过图床)<br>
备份：github、百度网盘<br>
之所以选择gitee而没选择github是因为国内访问速度有时候不是很快，影响体验。第三方图床作为备用图床，可以放一些不太重要的图片。github和百度网盘可以作图片的备份，防止数据丢失。</p>
<p>压缩图片<br>
上传图片之前建议压缩一下，可以减少空间使用，并有效加快图片载入速度。比较好的压缩工具如下</p>
<p>TinyPNG官网<br>
图床管理工具<br>
选择好图床后肯定就是上传并使用图片了，这时就会面对一个问题，那就是每次都要去图床上传，然后复制链接，然后回到使用图片的平台粘贴使用。特别麻烦。所以就出现了图床管理工具帮助我们快速上传图片并获取图片URL链接。这样就省去了自己操作的繁琐。</p>
<p>以下是一些优秀的图床管理工具</p>
<p>PicGo官网、PicGo-github地址(windows系统、mac系统)<br>
VScode-PicGo插件<br>
MPic官网、MPic官网（windows系统）<br>
shareX官网、shareX-github地址(windows系统)<br>
uPic官网、uPic-github地址（mac系统）<br>
PicUploader官网、PicUploader-github地址(windows系统、mac系统)<br>
PicGo很好，但对码云不太好。我是mac系统，所以用的uPic，官网有详细的使用手册，支持 smms、 又拍云 USS、七牛云 KODO、 阿里云 OSS、 腾讯云 COS、微博、Github、 Gitee、 Amazon S3、自定义上传接口。而且还可以选择上传前压缩图片。压缩工具都省了。</p>
<p>需要注意：</p>
<p>图床设置里面注意path的选择，这个就相当于一个相册，如果想把图片存到别的相册就要修改path路径。<br>
这种方法添加一张图片就要上传一次到码云，会产生很多的提交记录。个人用图片量不大时可以，图片量大的话会有滥用码云的可能，官方可能会采取一些措施。</p>
<p>作者：高鸿祥<br>
链接：https://www.jianshu.com/p/ea1eb11db63f<br>
来源：简书<br>
著作权归作者所有。商业转载请联系作者获得授权，非商业转载请注明出处。</p>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[Markdown基本语法]]></title>
        <id>https://zhoupingzong.github.io/lppsReXqI/</id>
        <link href="https://zhoupingzong.github.io/lppsReXqI/">
        </link>
        <updated>2020-03-05T08:34:26.000Z</updated>
        <content type="html"><![CDATA[<p>Markdown是一种纯文本格式的标记语言。通过简单的标记语法，它可以使普通文本内容具有一定的格式。</p>
<p>相比WYSIWYG编辑器</p>
<p>优点：<br>
1、因为是纯文本，所以只要支持Markdown的地方都能获得一样的编辑效果，可以让作者摆脱排版的困扰，专心写作。<br>
2、操作简单。比如:WYSIWYG编辑时标记个标题，先选中内容，再点击导航栏的标题按钮，选择几级标题。要三个步骤。而Markdown只需要在标题内容前加#即可</p>
<p>缺点：<br>
1、需要记一些语法（当然，是很简单。五分钟学会）。<br>
2、有些平台不支持Markdown编辑模式。</p>
<p>还好，简书是支持Markdown编辑模式的。</p>
<p>开启方式：设置-&gt;默认编辑器-&gt;Markdown编辑器<br>
一、标题<br>
在想要设置为标题的文字前面加#来表示<br>
一个#是一级标题，二个#是二级标题，以此类推。支持六级标题。</p>
<p>注：标准语法一般在#后跟个空格再写文字，貌似简书不加空格也行。</p>
<p>示例：</p>
<h1 id="这是一级标题">这是一级标题</h1>
<h2 id="这是二级标题">这是二级标题</h2>
<h3 id="这是三级标题">这是三级标题</h3>
<h4 id="这是四级标题">这是四级标题</h4>
<h5 id="这是五级标题">这是五级标题</h5>
<h6 id="这是六级标题">这是六级标题</h6>
<p>效果如下：</p>
<p>这是一级标题<br>
这是二级标题<br>
这是三级标题<br>
这是四级标题<br>
这是五级标题<br>
这是六级标题<br>
二、字体<br>
加粗<br>
要加粗的文字左右分别用两个*号包起来</p>
<p>斜体<br>
要倾斜的文字左右分别用一个*号包起来</p>
<p>斜体加粗<br>
要倾斜和加粗的文字左右分别用三个*号包起来</p>
<p>删除线<br>
要加删除线的文字左右分别用两个~~号包起来</p>
<p>示例：</p>
<p><strong>这是加粗的文字</strong><br>
<em>这是倾斜的文字</em>`<br>
<em><strong>这是斜体加粗的文字</strong></em><br>
<s>这是加删除线的文字</s><br>
效果如下：</p>
<p>这是加粗的文字<br>
这是倾斜的文字<br>
这是斜体加粗的文字<br>
这是加删除线的文字</p>
<p>三、引用<br>
在引用的文字前加&gt;即可。引用也可以嵌套，如加两个&gt;&gt;三个&gt;&gt;&gt;<br>
n个...<br>
貌似可以一直加下去，但没神马卵用</p>
<p>示例：</p>
<blockquote>
<p>这是引用的内容</p>
<blockquote>
<p>这是引用的内容</p>
<blockquote>
<blockquote>
<blockquote>
<blockquote>
<blockquote>
<blockquote>
<blockquote>
<blockquote>
<p>这是引用的内容<br>
效果如下：</p>
</blockquote>
</blockquote>
</blockquote>
</blockquote>
</blockquote>
</blockquote>
</blockquote>
</blockquote>
</blockquote>
</blockquote>
<p>这是引用的内容</p>
<p>这是引用的内容</p>
<p>这是引用的内容</p>
<p>四、分割线<br>
三个或者三个以上的 - 或者 * 都可以。</p>
<p>示例：</p>
<hr>
<hr>
<hr>
<hr>
<p>效果如下：<br>
可以看到，显示效果是一样的。</p>
<p>五、图片<br>
语法：</p>
<p>![图片alt](图片地址 ''图片title'')</p>
<p>图片alt就是显示在图片下面的文字，相当于对图片内容的解释。<br>
图片title是图片的标题，当鼠标移到图片上时显示的内容。title可加可不加<br>
示例：</p>
<p>![blockchain](https://ss0.bdstatic.com/70cFvHSh_Q1YnxGkpoWK1HF6hhy/it/<br>
u=702257389,1274025419&amp;fm=27&amp;gp=0.jpg &quot;区块链&quot;)<br>
效果如下：</p>
<p>blockchain<br>
上传本地图片直接点击导航栏的图片标志，选择图片即可</p>
<p>markdown格式追求的是简单、多平台统一。那么图片的存储就是一个问题，需要用图床，提供统一的外链，这样就不用在不同的平台去处理图片的问题了。才能做到书写一次，各处使用。<br>
关于图床的选择我写了一篇文章，对网上存在的各种方法做了总结，需要的朋友可以看看。markdown图床</p>
<p>六、超链接<br>
语法：</p>
<p><a href="%E8%B6%85%E9%93%BE%E6%8E%A5%E5%9C%B0%E5%9D%80" title="超链接title">超链接名</a><br>
title可加可不加<br>
示例：</p>
<p><a href="http://jianshu.com">简书</a><br>
<a href="http://baidu.com">百度</a><br>
效果如下：</p>
<p>简书<br>
百度</p>
<p>注：Markdown本身语法不支持链接在新页面中打开，貌似简书做了处理，是可以的。别的平台可能就不行了，如果想要在新页面中打开的话可以用html语言的a标签代替。</p>
<p><a href="超链接地址" target="_blank">超链接名</a></p>
<p>示例<br>
<a href="https://www.jianshu.com/u/1f5ac0cf6a8b" target="_blank">简书</a><br>
七、列表<br>
无序列表<br>
语法：<br>
无序列表用 - + * 任何一种都可以</p>
<ul>
<li>列表内容</li>
</ul>
<ul>
<li>列表内容</li>
</ul>
<ul>
<li>列表内容</li>
</ul>
<p>注意：- + * 跟内容之间都要有一个空格</p>
<p>效果如下：</p>
<p>列表内容<br>
列表内容<br>
列表内容<br>
有序列表<br>
语法：<br>
数字加点</p>
<ol>
<li>列表内容</li>
<li>列表内容</li>
<li>列表内容</li>
</ol>
<p>注意：序号跟内容之间要有空格<br>
效果如下：</p>
<p>列表内容<br>
列表内容<br>
列表内容<br>
列表嵌套<br>
上一级和下一级之间敲三个空格即可</p>
<p>一级无序列表内容</p>
<p>二级无序列表内容<br>
二级无序列表内容<br>
二级无序列表内容<br>
一级无序列表内容</p>
<p>二级有序列表内容<br>
二级有序列表内容<br>
二级有序列表内容<br>
一级有序列表内容</p>
<p>二级无序列表内容<br>
二级无序列表内容<br>
二级无序列表内容<br>
一级有序列表内容</p>
<p>二级有序列表内容<br>
二级有序列表内容<br>
二级有序列表内容<br>
八、表格<br>
语法：</p>
<table>
<thead>
<tr>
<th>表头</th>
<th style="text-align:center">表头</th>
<th style="text-align:right">表头</th>
</tr>
</thead>
<tbody>
<tr>
<td>内容</td>
<td style="text-align:center">内容</td>
<td style="text-align:right">内容</td>
</tr>
<tr>
<td>内容</td>
<td style="text-align:center">内容</td>
<td style="text-align:right">内容</td>
</tr>
</tbody>
</table>
<p>第二行分割表头和内容。</p>
<ul>
<li>有一个就行，为了对齐，多加了几个<br>
文字默认居左<br>
-两边加：表示文字居中<br>
-右边加：表示文字居右<br>
注：原生的语法两边都要用 | 包起来。此处省略<br>
示例：</li>
</ul>
<table>
<thead>
<tr>
<th>姓名</th>
<th style="text-align:center">技能</th>
<th style="text-align:right">排行</th>
</tr>
</thead>
<tbody>
<tr>
<td>刘备</td>
<td style="text-align:center">哭</td>
<td style="text-align:right">大哥</td>
</tr>
<tr>
<td>关羽</td>
<td style="text-align:center">打</td>
<td style="text-align:right">二哥</td>
</tr>
<tr>
<td>张飞</td>
<td style="text-align:center">骂</td>
<td style="text-align:right">三弟</td>
</tr>
</tbody>
</table>
<p>效果如下：</p>
<p>姓名	技能	排行<br>
刘备	哭	大哥<br>
关羽	打	二哥<br>
张飞	骂	三弟<br>
九、代码<br>
语法：<br>
单行代码：代码之间分别用一个反引号包起来</p>
<pre><code>`代码内容`
</code></pre>
<p>代码块：代码之间分别用三个反引号包起来，且两边的反引号单独占一行</p>
<p>(<code>) 代码... 代码... 代码... (</code>)<br>
注：为了防止转译，前后三个反引号处加了小括号，实际是没有的。这里只是用来演示，实际中去掉两边小括号即可。</p>
<p>示例：</p>
<p>单行代码</p>
<p><code>create database hero;</code><br>
代码块</p>
<p>(<code>) function fun(){ echo &quot;这是一句非常牛逼的代码&quot;; } fun(); (</code>)<br>
效果如下：</p>
<p>单行代码</p>
<p>create database hero;</p>
<p>代码块</p>
<p>function fun(){<br>
echo &quot;这是一句非常牛逼的代码&quot;;<br>
}<br>
fun();<br>
十、流程图</p>
<pre><code class="language-flow">st=&gt;start: 开始
op=&gt;operation: My Operation
cond=&gt;condition: Yes or No?
e=&gt;end
st-&gt;op-&gt;cond
cond(yes)-&gt;e
cond(no)-&gt;op
&amp;```
效果如下：
简书不支持流程图，所以截了个图


流程图.png</code></pre>
]]></content>
    </entry>
</feed>